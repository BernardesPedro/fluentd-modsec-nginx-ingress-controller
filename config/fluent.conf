# (1) Consume the input
<source>
  @type tail
  tag raw-modsec
  path /var/log/modsecurity_audit.log
  <parse>
    @type multiline
    format_firstline /^-{2,3}[a-zA-Z0-9]{8}-{2,3}A--$/
    format1 /(?<message>.*)/
  </parse>
</source>

# (2) Massage it via this plugin to a more structured object
<match raw-modsec>
  @type modsecurity-audit-format
  tag modsec-formatted
</match>

<filter modsec-formatted>
  @type geoip
  geoip_lookup_keys  sourceIp
  backend_library geoip2_c
  log_level         info

  <record>
    city            ${city.names.en["sourceIp"]}
    latitude        ${location.latitude["sourceIp"]}
    longitude       ${location.longitude["sourceIp"]}
    location_properties  '{ "lat" : ${location.latitude["sourceIp"]}, "lon" : ${location.longitude["sourceIp"]} }'
    country         ${country.iso_code["sourceIp"]}
    country_name    ${country.names.en["sourceIp"]}
    postal_code     ${postal.code["sourceIp"]}
    region_code     ${subdivisions.0.iso_code["sourceIp"]}
    region_name     ${subdivisions.0.names.en["sourceIp"]}
  </record>
  #skip_adding_null_record true
  add_tag_prefix          geoip.
  flush_interval          5s
</filter>

# (3) Output to stdout
<match modsec-formatted>
  @type elasticsearch
  hosts "#{ENV['ES_HOSTS']}"
  user "#{ENV['ES_USERNAME']}"
  password "#{ENV['ES_PASSWORD']}"
  port "443"
  ssl_verify false
  scheme https
  ssl_version TLSv1_2
  protocol https

  flush_interval 5s
  with_transporter_log true
  type_name doc
  logstash_prefix modsecurity
  logstash_dateformat %Y.%m
  logstash_format true
  include_timestamp true

  reconnect_on_error true
  reload_on_failure true
  reload_connections false
</match>

<match modsec-formatted>
  @type stdout
</match>
